@page "/addProduct"
<h3>Add Product</h3>

@inject NavigationManager NavigationManager
@inject IAddProductUseCase AddProductUseCase
@inject IViewCategoriesUseCase ViewCategoriesUseCase
@{
    if (product != null)
    {
        <EditForm Model="product" class="row g-3" OnInvalidSubmit="OnValidSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <div >
                <label for="name">Name</label>
                <InputText id="name" @bind-Value="product.Name" ></InputText>
            </div>

            <div >
                <label for="category">Category</label>
                <select id="category" @bind="product.CategoryId" class="form-control">
                    <option  selected="">
                    </option>
                        @foreach (var cat in categories)
                        {
                            <option value="@cat.CategoryId">@cat.Name</option>
                        }
                </select>
            </div>
            <div class="form-group">
                <label for="price">Price</label>
                <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format ="F2" class ="form-control"></InputNumber>
            </div>
            <div>
                <label for="qty">Quantity</label>
                <InputNumber id="qty" @bind-Value="product.Quantity" class="form-control"></InputNumber>
            </div>

            <button type="submit" class="btn btn-primary" @onclick="OnValidSubmit" >Save</button>
            <button type="submit" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
        </EditForm>
    }
}



@code {

    private Product? product;
    private IEnumerable<Category> categories;
    protected override void OnInitialized()
    {
        product = new Product();
        categories = ViewCategoriesUseCase.Execute();
    }

    private void OnValidSubmit()
    {
        AddProductUseCase.Execute(product!);
        NavigationManager.NavigateTo("/products");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/products");
    }

}
