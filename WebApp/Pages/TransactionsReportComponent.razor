@page "/transactions"

@inject IGetTransactionsUseCase GetTransactionsUseCase
@inject IJSRuntime JsRuntime

<h3>TransactionsReportComponent</h3>

<div class="row">
    <div class="col-4">
        <label for="cashier">Cashier Name</label>
        <input type="text" id="cashier" class="form-control" @bind-value = "cashierName"/>
    </div>
    <div class="col-3">
        <label for="start_date">Start Date</label>
        <input type="date" id="start_date" class="form-control" @bind-value="startDate" />
    </div>
    <div class="col-3">
        <label for="end_date">End Date</label>
        <input type="date" id="end_date" class="form-control" @bind-value="endDate" />
    </div>
    <div class="col-2">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary" @onclick="LoadTransactions">Search</button>
    </div>
    <div class="col-2">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary" @onclick="PrintReport">Print</button>
    </div>
</div>
<br/>

@if (transactions != null)
{
    <div id ="printarea">
        <table class="table">
            <thead>
            <tr>
                <th>Date Time</th>
                <th>Cashier Name</th>
                <th>Product Name</th>
                <th>Qty Before</th>
                <th>Qty Sold</th>
                <th>Qty After</th>
                <th>Price</th>
                <th>Sold Amt</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var tran in transactions)
            {
                <tr>
                    <td>@tran.TimeStamp.ToString("yyyy-MM/dd/ hh:mm")</td>
                    <td>@tran.CashierName </td>
                    <td>@tran.ProductName</td>
                    <td>@tran.BeforeQty</td>
                    <td>@tran.SoldQty</td>
                    <td>@(tran.BeforeQty - tran.SoldQty)</td>
                    <td style="text-align: right">@(string.Format($"{tran.SoldQty * tran.Price:c}"))</td>
                    <td style="text-align: right">@(string.Format($"{tran.SoldQty * tran.Price:c}"))</td>
                </tr>
            }
            </tbody>
            <tfoot>
            <tr>
                <td colspan="6">&nbsp;</td>
                <td><b>Grand Total</b></td>
                <td style="text-align: right"> <b>@(string.Format($"{transactions.Sum(t => t.Price * t.SoldQty):c}"))</b>
                </td>
            </tr>
            </tfoot>
        </table>
    </div>
}


@code {
    private string cashierName;
    private DateTime startDate;
    private DateTime endDate;
    private IEnumerable<Transaction> transactions;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        startDate = DateTime.Today;
        endDate = DateTime.Today;
    }

    private void LoadTransactions()
    {
        transactions = GetTransactionsUseCase.Execute(cashierName, startDate, endDate);
    }

    private void PrintReport()
    {
        JsRuntime.InvokeVoidAsync("print");
    }

}
